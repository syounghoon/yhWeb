<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- bean 태그를 새로 등록할 때 id와 class 속성은 필수! -->
	<!-- id : bean의 이름. 관례상 클래스 이름의 마지막 부분만 소문자로 씀
		, class : Spring Beans Container에 등록되는 클래스 이름 -->
	<!-- description : 설명. (optional) -->
	<!-- property 태그는 기본적으로 name 속성을 갖고 value와 ref 속성도 갖는다. -->
	<!-- property : 클래스가 모델링된 객체의 필드. name : 필드의 이름, value : 필드의 값 -->
	<!-- 자바 빈즈 규약에 따라 필드는 private이기 때문에 사실상 property는 setter메서드를 호출해서 값을 넣음 -->
	<!-- idleTimeout : ms시간 동안  -->
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<description>HikariCP Configuration</description>

		<!-- JDBC -->
		<!-- <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@db202106301639_high?TNS_ADMIN=C:/opt/OracleCloudWallet/ATP"/>
		-->
		<!--  JDBC DriverSpy -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@db202106301639_high?TNS_ADMIN=C:/OPT/FilmeeCloudWallet/ATP"/>		
	
		<property name="username" value="FILMEE"/>
		<property name="password" value="Oracle12345!!!"/>

		<property name="maximumPoolSize" value="10"/>
		<property name="minimumIdle" value="2"/>
		<property name="idleTimeout" value="10000"/>
		<property name="connectionTimeout" value="1000"/>
		<property name="connectionTestQuery" value="SELECT 1 FROM dual"/>
		<property name="dataSourceJNDI" value="jdbc/HikariCP"/>
	</bean>

	<bean id="hikariDataSource"
		  class="com.zaxxer.hikari.HikariDataSource"
		  destroy-method="close">
		<description>HikariCP DataSource</description>

		<constructor-arg ref="hikariConfig"/>
		<!-- 매개변수가 필요한 생성자에 ref값을 인자로 전달함 -->
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="hikariDataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<!-- value=classpath : classpath에서 뒤의 resource를 찾아라 -->
		<!-- <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property> -->
			<!-- ** : 모든 하위폴더, *~ : 로 끝나는 모든 파일  -->
	</bean>	

	
	<context:component-scan base-package="com.filmee.myapp.service" />
	<context:component-scan base-package="com.filmee.myapp.aop" />
	<context:component-scan base-package="com.filmee.myapp.util" />
	

	
	<mybatis-spring:scan base-package="com.filmee.myapp.mapper" />
		
		
	<!-- ================ AOP proxy configuration ============= -->
	<context:annotation-config />
	<aop:aspectj-autoproxy />

	
	<!-- ============ Spring Transaction Configuration ========= -->
	<bean
		id = "transactionManager"
		class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="hikariDataSource" />
	</bean>
	
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
           
         <property name="maxUploadSize" value="52428800" />



                 <property name="defaultEncoding" value="utf-8" />
   </bean>
		
	<tx:annotation-driven />		

	<!-- Mail sender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="shawnshhan@gmail.com"/>
        <property name="password" value="forTest999" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>

</beans>
